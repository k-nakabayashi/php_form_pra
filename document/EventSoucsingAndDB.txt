楽観的ロジック
複数のリクエストが同時に同じアグリゲートを更新する時。

・整合性をとりたい
・アグリゲートルートのバージョンを、テーブルに記憶しておく
→バージョンが変更していなければ、更新でき、トランザクションは成功する。
→更新されていたら、更新できずにそのトランザクションは失敗する


ネステッドループ結合
ハッシュ結合
ソートマージ結合

トランザクション分離レベル

ファントムリード
・他のトランザクションの更新途中のレコードを取得できてしまう。
・トランザクション分離レベルがREPEATABLE-READ
　対応しきれないなら
→ネクストキーロックで対応
→→コミットするまで他のトランザクションからの操作をロックする

パラレルクエリ
PostGIS

postgres
バキューム機能

ポーリング
・イベントの発生を定期的にチェックすること
割り込み処理
・イベントに対応するハンドラを用意
・イベントが来たらハンドラの内容を実行
＝＝＝＝＝＝＝＝
memento
json

＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝

イベントパブリッシングメカニズム
・eventsテーブルにselectポーリングして、新しいイベントがあればブローカーにpublish
・トランザクションログテーリング

＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
スナップショット
アグリゲートの再現
・毎回、イベント内容を実行するのはめんどう
・スナップショットをとり、スナップショットとスナップショット後のイベントを実行し、
アグリゲートを再現する
